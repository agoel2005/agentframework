{
	"test_cases": [
		{
			"nums": [
				2,
				7,
				11,
				15
			],
			"target": 9,
			"expected": [
				0,
				1
			]
		},
		{
			"nums": [
				3,
				2,
				4
			],
			"target": 6,
			"expected": [
				1,
				2
			]
		},
		{
			"nums": [
				3,
				3
			],
			"target": 6,
			"expected": [
				0,
				1
			]
		}
	],
	"code": "# -*- coding: utf-8 -*-\n\n################################################\n#\n# URL:\n# =====\n# https://leetcode.com/problems/two-sum/\n#\n# DESC:\n# =====\n# Given an array of integers,\n# return indices of the two numbers such that they add up to a specific target.\n#\n# You may assume that each input would have exactly one solution,\n# and you may not use the same element twice.\n#\n# Example:\n#\n# Given nums = [2, 7, 11, 15], target = 9,\n#\n# Because nums[0] + nums[1] = 2 + 7 = 9,\n# return [0, 1].\n################################################\n\nfrom typing import List\n\nclass Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        dic = {}\n        for index, num in enumerate(nums):\n            pair = target - num\n            if pair in dic:\n                return [dic[pair], index]\n            else:\n                dic[num] = index\n"
}
