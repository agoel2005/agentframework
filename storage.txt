```json
{
    "test_cases": [
        {"input": [[1,1], [1,1], [2,2]], "expected_output": 2, "actual_output": 2, "result": "Passed"},
        {"input": [[1,1], [1,2], [1,3]], "expected_output": 3, "actual_output": 3, "result": "Passed"},
        {"input": [[1,1], [2,1], [3,1]], "expected_output": 3, "actual_output": 3, "result": "Passed"},
        {"input": [[-1,-1], [-2,-2], [-3,-3]], "expected_output": 3, "actual_output": 3, "result": "Passed"},
        {"input": [[0,0], [1,1], [2,2.0000001]], "expected_output": 2, "actual_output": 2, "result": "Passed"},
        {"input": [[0,0], [1,1], [2,2], [1,2], [2,3]], "expected_output": 3, "actual_output": 3, "result": "Passed"},
        {"input": [[1,1]], "expected_output": 1, "actual_output": 1, "result": "Passed"},
        {"input": [[1,1], [2,2]], "expected_output": 2, "actual_output": 2, "result": "Passed"},
        {"input": [[1000000000,1000000000], [999999999,999999999], [999999998,999999998]], "expected_output": 3, "actual_output": 3, "result": "Passed"},
        {"input": [], "expected_output": 0, "actual_output": 0, "result": "Passed"},
        {"input": [[1,1], [-1,-1], [2,2], [-2,-2]], "expected_output": 4, "actual_output": 4, "result": "Passed"}
    ],
    "code": "def maxPoints(self, points: List[List[int]]) -> int:\n    '''\n    Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane, return the maximum number of points that lie on the same straight line.\n\n    Input: points = [[1,1],[2,2],[3,3]]\n    Output: 3\n\n    Input: points = [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]\n    Output: 4\n    '''\n\n    if len(points) < 3:\n        return len(points)\n\n    dict = {}\n    for b in points:\n        for a in points:\n            if a == b:\n                continue\n\n            k = a[0] - b[0]\n            if k == 0:\n                f = (a[0],)\n            else:\n                ax = (a[1] - b[1]) / k\n                bb = (a[0]*b[1] - a[1]*b[0]) / k\n                f = (ax, bb)\n\n            if f not in dict:\n                dict[f] = set()\n            dict[f].add(tuple(a))\n\n    return max(len(v) for k, v in dict.items())"
}
```